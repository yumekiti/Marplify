name: Auto Deploy

on:
  push:
    branches:
      - deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image for api
      uses: docker/build-push-action@v2
      with:
        context: ./api
        push: true
        file: ./api/Dockerfile
        platforms: linux/arm64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        tags: yumekiti/marplify-api:$(git -C api rev-parse --short HEAD)

    - name: Update deployment.yaml for api
      run: sed -i "s/yumekiti\/marplify-api:.*/yumekiti\/marplify-api:$(git -C api rev-parse --short HEAD)/" .argocd/deployment.yaml

    - name: Build and push Docker image for web
      uses: docker/build-push-action@v2
      with:
        context: ./web
        push: true
        file: ./web/Dockerfile
        platforms: linux/arm64
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        tags: yumekiti/marplify-web:$(git -C web rev-parse --short HEAD)

    - name: Update deployment.yaml for web
      run: sed -i "s/yumekiti\/marplify-web:.*/yumekiti\/marplify-web:$(git -C web rev-parse --short HEAD)/" .argocd/deployment.yaml

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Commit and push changes to deploy branch
      run: |
        git config --global user.name '${{ secrets.GIT_USERNAME }}'
        git config --global user.email '${{ secrets.GIT_USEREMAIL }}'
        git add .
        git commit --no-verify -m "Update Docker images and ArgoCD versions"
        git push origin deploy
